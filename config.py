# Autogenerated config.py
#
# NOTE: config.py is intended for advanced users who are comfortable
# with manually migrating the config file on qutebrowser upgrades. If
# you prefer, you can also configure qutebrowser using the
# :set/:bind/:config-* commands without having to write a config.py
# file.
#
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Change the argument to True to still load settings configured via autoconfig.yml
config.load_autoconfig(False)

# Which cookies to accept. With QtWebEngine, this setting also controls
# other features with tracking capabilities similar to those of cookies;
# including IndexedDB, DOM storage, filesystem API, service workers, and
# AppCache. Note that with QtWebKit, only `all` and `never` are
# supported as per-domain values. Setting `no-3rdparty` or `no-
# unknown-3rdparty` per-domain on QtWebKit will have the same effect as
# `all`. If this setting is used with URL patterns, the pattern gets
# applied to the origin/first party URL of the page making the request,
# not the request URL. With QtWebEngine 5.15.0+, paths will be stripped
# from URLs, so URL patterns using paths will not match. With
# QtWebEngine 5.15.2+, subdomains are additionally stripped as well, so
# you will typically need to set this setting for `example.com` when the
# cookie is set on `somesubdomain.example.com` for it to work properly.
# To debug issues with this setting, start qutebrowser with `--debug
# --logfilter network --debug-flag log-cookies` which will show all
# cookies being set.
# Type: String
# Valid values:
#   - all: Accept all cookies.
#   - no-3rdparty: Accept cookies from the same origin only. This is known to break some sites, such as GMail.
#   - no-unknown-3rdparty: Accept cookies from the same origin only, unless a cookie is already set for the domain. On QtWebEngine, this is the same as no-3rdparty.
#   - never: Don't accept cookies at all.
config.set('content.cookies.accept', 'all', 'chrome-devtools://*')

# Which cookies to accept. With QtWebEngine, this setting also controls
# other features with tracking capabilities similar to those of cookies;
# including IndexedDB, DOM storage, filesystem API, service workers, and
# AppCache. Note that with QtWebKit, only `all` and `never` are
# supported as per-domain values. Setting `no-3rdparty` or `no-
# unknown-3rdparty` per-domain on QtWebKit will have the same effect as
# `all`. If this setting is used with URL patterns, the pattern gets
# applied to the origin/first party URL of the page making the request,
# not the request URL. With QtWebEngine 5.15.0+, paths will be stripped
# from URLs, so URL patterns using paths will not match. With
# QtWebEngine 5.15.2+, subdomains are additionally stripped as well, so
# you will typically need to set this setting for `example.com` when the
# cookie is set on `somesubdomain.example.com` for it to work properly.
# To debug issues with this setting, start qutebrowser with `--debug
# --logfilter network --debug-flag log-cookies` which will show all
# cookies being set.
# Type: String
# Valid values:
#   - all: Accept all cookies.
#   - no-3rdparty: Accept cookies from the same origin only. This is known to break some sites, such as GMail.
#   - no-unknown-3rdparty: Accept cookies from the same origin only, unless a cookie is already set for the domain. On QtWebEngine, this is the same as no-3rdparty.
#   - never: Don't accept cookies at all.
config.set('content.cookies.accept', 'all', 'devtools://*')

# Default encoding to use for websites. The encoding must be a string
# describing an encoding such as _utf-8_, _iso-8859-1_, etc.
# Type: String
c.content.default_encoding = 'utf-8'

# Value to send in the `Accept-Language` header. Note that the value
# read from JavaScript is always the global value.
# Type: String
config.set('content.headers.accept_language', '', 'https://matchmaker.krunker.io/*')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like "X11; Linux x86_64". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/{webkit_version} (KHTML, like Gecko) {upstream_browser_key}/{upstream_browser_version} Safari/{webkit_version}', 'https://web.whatsapp.com/')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like "X11; Linux x86_64". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}; rv:90.0) Gecko/20100101 Firefox/90.0', 'https://accounts.google.com/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'chrome-devtools://*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome-devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

# Allow locally loaded documents to access remote URLs.
# Type: Bool
config.set('content.local_content_can_access_remote_urls', True, 'file:///home/marin/.local/share/qutebrowser/userscripts/*')

# Allow locally loaded documents to access other local URLs.
# Type: Bool
config.set('content.local_content_can_access_file_urls', False, 'file:///home/marin/.local/share/qutebrowser/userscripts/*')




# Additional settings

# Which method of blocking ads should be used.  Support for Adblock Plus
# (ABP) syntax blocklists using Brave's Rust library requires the
# `adblock` Python package to be installed, which is an optional
# dependency of qutebrowser. It is required when either `adblock` or
# `both` are selected.
# Type: String
# Valid values:
#   - auto: Use Brave's ABP-style adblocker if available, host blocking otherwise
#   - adblock: Use Brave's ABP-style adblocker
#   - hosts: Use hosts blocking
#   - both: Use both hosts blocking and Brave's ABP-style adblocker
c.content.blocking.method = 'hosts'
c.content.blocking.hosts.lists = [
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/adaway.org/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/adblock-nocoin-list/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/adguard-cname-trackers/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/adguard-simplified/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/d3host/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/dandelionsprout-nordic/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-ara/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-bul/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-ces-slk/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-deu/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-fra/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-heb/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-ind/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-ita/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-kor/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-lav/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-lit/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-nld/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-pol/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-por/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-rus/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-spa/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easylist-zho/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/easyprivacy/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/eth-phishing-detect/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/gfrogeye-firstparty-trackers/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/hostsvn/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/kadhosts/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/matomo.org-spammers/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/mitchellkrogza-badd-boyz-hosts/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/pgl.yoyo.org/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/phishing.army/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/someonewhocares.org/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/spam404.com/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/stevenblack/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/turkish-ad-hosts/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/ublock/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/ublock-2020/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/ublock-2021/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/ublock-2022/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/ublock-2023/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/ublock-2024/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/ublock-abuse/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/ublock-badware/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/ublock-privacy/list.txt',
'https://raw.githubusercontent.com/hectorm/hmirror/master/data/urlhaus/list.txt',
]

# Dark mode
config.set('colors.webpage.preferred_color_scheme', 'dark')

# Fonts
c.fonts.default_family = 'Source Code Pro'

# Auto save session
c.auto_save.session = True

# Smooth scrolling
c.scrolling.smooth = True

# General keybindings
config.bind('<Ctrl-Shift-p>', 'hint links spawn umpv {hint-url}')
config.bind('D', 'tab-close -o')
config.unbind('d')
config.unbind('q')
config.bind('j', 'scroll-px 0 380')
config.bind('k', 'scroll-px 0 -130')
config.bind('d', 'scroll-px 0 80')

# Search engines
# c.url.searchengines = {
#     'DEFAULT': 'https://www.google.com/search?q={}',
# }

# c.url.default_page = 'https://www.google.com'
# c.url.start_pages = 'https://www.google.hr'

# GPU settings
config.set('qt.args', [
    'ignore-gpu-blocklist', 
    'enable-gpu-rasterization', 
    'enable-accelerated-video-decode', 
    'enable-zero-copy',
    'enable-features=VaapiVideoDecodeLinuxGL', 
    'enable-features=VaapiIgnoreDriverChecks'
    ])

# Ranger as file manager
config.set("fileselect.handler", "external")
config.set("fileselect.single_file.command", ['kitty', '--class', 'ranger,ranger', '-e', 'ranger', '--choosefile', '{}'])
config.set("fileselect.multiple_files.command", ['kitty', '--class', 'ranger,ranger', '-e', 'ranger', '--choosefiles', '{}'])

# hide statusbar
c.statusbar.show = 'always'
c.tabs.position = 'left'
c.tabs.width = '12%'
c.tabs.last_close = 'startpage'
c.tabs.favicons.scale = 1.5
c.tabs.padding = {'top': 10, 'bottom': 10, 'left': 5, 'right': 5}
c.tabs.show = 'multiple'
# c.tabs.pinned.shrink = False
# c.tabs.pinned.frozen = False
c.tabs.title.format_pinned = '{index}: {current_title}'
c.tabs.indicator.width = 0


# base16-qutebrowser (https://github.com/theova/base16-qutebrowser)
# Scheme name: Ayu Dark
# Scheme author: Khue Nguyen &lt;Z5483Y@gmail.com&gt;
# Template author: theova
# Commentary: Tinted Theming: (https://github.com/tinted-theming)

base00 = "#111111"
base01 = "#111111"
base02 = "#272d38"
base03 = "#3e4b59"
base04 = "#919191"
base05 = "#dedede"
base06 = "#dedede"
base07 = "#ffffff"
base08 = "#e17373"
base09 = "#ffa460"
base0A = "#ffb97b"
base0B = "#94b978"
base0C = "#19b2a7"
base0D = "#96bddb"
base0E = "#e1c0fa"
base0F = "#ffdba0"

# Transparent window
c.window.transparent = True
# c.colors.tabs.bar.bg = "transparent"
# c.colors.statusbar.normal.bg = "rgba(0, 0, 0, 0.5)"


# set qutebrowser colors

c.hints.border = base08

# Text color of the completion widget. May be a single color to use for
# all columns or a list of three colors, one for each column.
c.colors.completion.fg = base05

# Background color of the completion widget for odd rows.
c.colors.completion.odd.bg = base01

# Background color of the completion widget for even rows.
c.colors.completion.even.bg = base00

# Foreground color of completion widget category headers.
c.colors.completion.category.fg = base09

# Background color of the completion widget category headers.
c.colors.completion.category.bg = base00

# Top border color of the completion widget category headers.
c.colors.completion.category.border.top = base00

# Bottom border color of the completion widget category headers.
c.colors.completion.category.border.bottom = base00

# Foreground color of the selected completion item.
c.colors.completion.item.selected.fg = base05

# Background color of the selected completion item.
c.colors.completion.item.selected.bg = base02

# Top border color of the selected completion item.
c.colors.completion.item.selected.border.top = base02

# Bottom border color of the selected completion item.
c.colors.completion.item.selected.border.bottom = base02

# Foreground color of the matched text in the selected completion item.
c.colors.completion.item.selected.match.fg = base0B

# Foreground color of the matched text in the completion.
c.colors.completion.match.fg = base0B

# Color of the scrollbar handle in the completion view.
c.colors.completion.scrollbar.fg = base05

# Color of the scrollbar in the completion view.
c.colors.completion.scrollbar.bg = base00

# Background color of disabled items in the context menu.
c.colors.contextmenu.disabled.bg = base01

# Foreground color of disabled items in the context menu.
c.colors.contextmenu.disabled.fg = base04

# Background color of the context menu. If set to null, the Qt default is used.
c.colors.contextmenu.menu.bg = base00

# Foreground color of the context menu. If set to null, the Qt default is used.
c.colors.contextmenu.menu.fg =  base05

# Background color of the context menu’s selected item. If set to null, the Qt default is used.
c.colors.contextmenu.selected.bg = base02

#Foreground color of the context menu’s selected item. If set to null, the Qt default is used.
c.colors.contextmenu.selected.fg = base05

# Background color for the download bar.
c.colors.downloads.bar.bg = base00

# Color gradient start for download text.
c.colors.downloads.start.fg = base00

# Color gradient start for download backgrounds.
c.colors.downloads.start.bg = base0D

# Color gradient end for download text.
c.colors.downloads.stop.fg = base00

# Color gradient stop for download backgrounds.
c.colors.downloads.stop.bg = base0C

# Foreground color for downloads with errors.
c.colors.downloads.error.fg = base08

# Font color for hints.
c.colors.hints.fg = base00

# Background color for hints. Note that you can use a `rgba(...)` value
# for transparency.
c.colors.hints.bg = base08

# Font color for the matched part of hints.
c.colors.hints.match.fg = base05

# Text color for the keyhint widget.
c.colors.keyhint.fg = base05

# Highlight color for keys to complete the current keychain.
c.colors.keyhint.suffix.fg = base05

# Background color of the keyhint widget.
c.colors.keyhint.bg = base00

# Foreground color of an error message.
c.colors.messages.error.fg = base00

# Background color of an error message.
c.colors.messages.error.bg = base08

# Border color of an error message.
c.colors.messages.error.border = base08

# Foreground color of a warning message.
c.colors.messages.warning.fg = base00

# Background color of a warning message.
c.colors.messages.warning.bg = base0E

# Border color of a warning message.
c.colors.messages.warning.border = base0E

# Foreground color of an info message.
c.colors.messages.info.fg = base05

# Background color of an info message.
c.colors.messages.info.bg = base00

# Border color of an info message.
c.colors.messages.info.border = base00

# Foreground color for prompts.
c.colors.prompts.fg = base05

# Border used around UI elements in prompts.
c.colors.prompts.border = base00

# Background color for prompts.
c.colors.prompts.bg = base00

# Background color for the selected item in filename prompts.
c.colors.prompts.selected.bg = base02

# Foreground color for the selected item in filename prompts.
c.colors.prompts.selected.fg = base05

# Foreground color of the statusbar.
c.colors.statusbar.normal.fg = base05

# Background color of the statusbar.
c.colors.statusbar.normal.bg = "rgba(0, 0, 0, 1.0)"

# Foreground color of the statusbar in insert mode.
c.colors.statusbar.insert.fg = base07

# Background color of the statusbar in insert mode.
c.colors.statusbar.insert.bg = base03

# Foreground color of the statusbar in passthrough mode.
c.colors.statusbar.passthrough.fg = base00

# Background color of the statusbar in passthrough mode.
c.colors.statusbar.passthrough.bg = base0C

# Foreground color of the statusbar in private browsing mode.
c.colors.statusbar.private.fg = base00

# Background color of the statusbar in private browsing mode.
c.colors.statusbar.private.bg = base01

# Foreground color of the statusbar in command mode.
c.colors.statusbar.command.fg = base08

# Background color of the statusbar in command mode.
c.colors.statusbar.command.bg = base00

# Foreground color of the statusbar in private browsing + command mode.
c.colors.statusbar.command.private.fg = base05

# Background color of the statusbar in private browsing + command mode.
c.colors.statusbar.command.private.bg = base00

# Foreground color of the statusbar in caret mode.
c.colors.statusbar.caret.fg = base00

# Background color of the statusbar in caret mode.
c.colors.statusbar.caret.bg = base0E

# Foreground color of the statusbar in caret mode with a selection.
c.colors.statusbar.caret.selection.fg = base00

# Background color of the statusbar in caret mode with a selection.
c.colors.statusbar.caret.selection.bg = base0D

# Background color of the progress bar.
c.colors.statusbar.progress.bg = base0D

# Default foreground color of the URL in the statusbar.
c.colors.statusbar.url.fg = base05

# Foreground color of the URL in the statusbar on error.
c.colors.statusbar.url.error.fg = base08

# Foreground color of the URL in the statusbar for hovered links.
c.colors.statusbar.url.hover.fg = base05

# Foreground color of the URL in the statusbar on successful load
# (http).
c.colors.statusbar.url.success.http.fg = base0C

# Foreground color of the URL in the statusbar on successful load
# (https).
c.colors.statusbar.url.success.https.fg = base04

# Foreground color of the URL in the statusbar when there's a warning.
c.colors.statusbar.url.warn.fg = base0E

# Background color of the tab bar.
c.colors.tabs.bar.bg = "rgba(15,20,25, 0.9)"

# Color gradient start for the tab indicator.
c.colors.tabs.indicator.start = base0D

# Color gradient end for the tab indicator.
c.colors.tabs.indicator.stop = base0C

# Color for the tab indicator on errors.
c.colors.tabs.indicator.error = base08

# Foreground color of unselected odd tabs.
c.colors.tabs.odd.fg = base05

# Background color of unselected odd tabs.
c.colors.tabs.odd.bg = "rgba(15,20,25, 0.0)"

# Foreground color of unselected even tabs.
c.colors.tabs.even.fg = base05

# Background color of unselected even tabs.
c.colors.tabs.even.bg = "rgba(15,20,25, 0.0)"

# Background color of pinned unselected even tabs.
c.colors.tabs.pinned.even.bg = "rgba(89, 194, 255, 0.3)"

# Foreground color of pinned unselected even tabs.
c.colors.tabs.pinned.even.fg = base05

# Background color of pinned unselected odd tabs.
c.colors.tabs.pinned.odd.bg = "rgba(89, 194, 255, 0.3)"

# Foreground color of pinned unselected odd tabs.
c.colors.tabs.pinned.odd.fg = base05

# Background color of pinned selected even tabs.
c.colors.tabs.pinned.selected.even.bg = base02

# Foreground color of pinned selected even tabs.
c.colors.tabs.pinned.selected.even.fg = base0C

# Background color of pinned selected odd tabs.
c.colors.tabs.pinned.selected.odd.bg = base02

# Foreground color of pinned selected odd tabs.
c.colors.tabs.pinned.selected.odd.fg = base0C

# Foreground color of selected odd tabs.
c.colors.tabs.selected.odd.fg = base07

# Background color of selected odd tabs.
c.colors.tabs.selected.odd.bg = "rgb(26,40,49)"

# Foreground color of selected even tabs.
c.colors.tabs.selected.even.fg = base07

# Background color of selected even tabs.
c.colors.tabs.selected.even.bg = "rgb(26,40,49)"

# Background color for webpages if unset (or empty to use the theme's
# color).
# c.colors.webpage.bg = base00
